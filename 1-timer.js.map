{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst input = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst days = document.querySelector('[data-days]');\nconst hours = document.querySelector('[data-hours]');\nconst minutes = document.querySelector('[data-minutes]');\nconst seconds = document.querySelector('[data-seconds]');\n\n\nlet selectedTime = null;\nlet intervalID = null;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    // console.log(selectedDates[0]);\n    let userSelectedDate = selectedDates[0];\n\nif (userSelectedDate.getTime() <= Date.now()) {\n    iziToast.error({\n        message: 'Please choose a date in the future',\n    });\n    startBtn.disabled = true;\n    selectedTime = null;\n} else {\n      startBtn.disabled = false;\n      selectedTime = userSelectedDate.getTime();\n  }\n },\n};\n\nflatpickr(input, options);\n\nstartBtn.addEventListener('click', () => {\n    startBtn.disabled = true;\n    input.disabled = true;\n\n    intervalID = setInterval(() => {\n        const diff = selectedTime - Date.now();\n\n       if (diff <= 0) {\n            clearInterval(intervalID);\n\n            days.textContent = '00';\n            hours.textContent = '00';\n            minutes.textContent = '00';\n            seconds.textContent = '00';\n\n            input.disabled = false;\n            return;\n        }\n\n        const { days: d, hours: h, minutes: m, seconds: s } = convertMs(diff);\n\n        days.textContent = d;\n        hours.textContent = addLeadingZero(h);\n        minutes.textContent = addLeadingZero(m);\n        seconds.textContent = addLeadingZero(s);\n         \n    }, 1000);\n});\n\nfunction convertMs(ms) {\n\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n\n};\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n}\n"],"names":["input","startBtn","days","hours","minutes","seconds","selectedTime","intervalID","options","selectedDates","userSelectedDate","iziToast","flatpickr","diff","d","h","m","s","convertMs","addLeadingZero","ms","value"],"mappings":"+IAKA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EAGvD,IAAIC,EAAe,KACfC,EAAa,KAEjBN,EAAS,SAAW,GAEpB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAErB,IAAIC,EAAmBD,EAAc,CAAC,EAEtCC,EAAiB,QAAO,GAAM,KAAK,IAAG,GACtCC,EAAS,MAAM,CACX,QAAS,oCACjB,CAAK,EACDV,EAAS,SAAW,GACpBK,EAAe,OAEbL,EAAS,SAAW,GACpBK,EAAeI,EAAiB,UAEpC,CACF,EAEAE,EAAUZ,EAAOQ,CAAO,EAExBP,EAAS,iBAAiB,QAAS,IAAM,CACrCA,EAAS,SAAW,GACpBD,EAAM,SAAW,GAEjBO,EAAa,YAAY,IAAM,CAC3B,MAAMM,EAAOP,EAAe,KAAK,IAAG,EAErC,GAAIO,GAAQ,EAAG,CACV,cAAcN,CAAU,EAExBL,EAAK,YAAc,KACnBC,EAAM,YAAc,KACpBC,EAAQ,YAAc,KACtBC,EAAQ,YAAc,KAEtBL,EAAM,SAAW,GACjB,MACH,CAED,KAAM,CAAE,KAAMc,EAAG,MAAOC,EAAG,QAASC,EAAG,QAASC,CAAC,EAAKC,EAAUL,CAAI,EAEpEX,EAAK,YAAcY,EACnBX,EAAM,YAAcgB,EAAeJ,CAAC,EACpCX,EAAQ,YAAce,EAAeH,CAAC,EACtCX,EAAQ,YAAcc,EAAeF,CAAC,CAEzC,EAAE,GAAI,CACX,CAAC,EAED,SAASC,EAAUE,EAAI,CAOnB,MAAMlB,EAAO,KAAK,MAAMkB,EAAK,KAAG,EAC1BjB,EAAQ,KAAK,MAAOiB,EAAK,MAAO,IAAI,EACpChB,EAAU,KAAK,MAAQgB,EAAK,MAAO,KAAQ,GAAM,EACjDf,EAAU,KAAK,MAASe,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAlB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAE1C,CAEA,SAASc,EAAeE,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC"}